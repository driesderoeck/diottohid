// Import libraries (BLEPeripheral depends on SPI)
#include <SPI.h>
#include <BLEHIDPeripheral.h>
#include <BLEKeyboard.h>

// define pins (varies per shield/board)
#define BLE_REQ   4
#define BLE_RDY   2
#define BLE_RST   3

#define BUTTON1   5

#define ANDROID_CENTRAL

BLEHIDPeripheral bleHID = BLEHIDPeripheral(BLE_REQ, BLE_RDY, BLE_RST);
BLEKeyboard bleKeyboard;

int buttonState;

void setup() {
  Serial.begin(9600);
#if defined (__AVR_ATmega32U4__)
  while(!Serial);
#endif

  // clears bond data on every boot
  bleHID.clearBondStoreData();

#ifdef ANDROID_CENTRAL
  bleHID.setReportIdOffset(1);
#endif
  
  bleHID.setDeviceName("DIOTTO");

  bleHID.setLocalName("DIOTTOHID");

  bleHID.addHID(bleKeyboard);
  bleHID.begin();

  Serial.println(F("BLE DIOTTO HID"));
}

void loop() {
  BLECentral central = bleHID.central();

  if (central) {
    // central connected to peripheral
    Serial.print(F("Connected to central: "));
    Serial.println(central.address());

    while (bleHID.connected()) {
      
      int tempButtonState = digitalRead(BUTTON1);

      if (tempButtonState != buttonState) {
        buttonState = tempButtonState;
        
        if (buttonState == LOW) {
          Serial.println(F("Button1 release"));
          bleKeyboard.releaseAll();
        } else {
          Serial.println(F("Button1 press"));
          bleKeyboard.press(KEYCODE_A);
        }
      }
      
    }

    // central disconnected
    Serial.print(F("Disconnected from central: "));
    Serial.println(central.address());
  }
}
